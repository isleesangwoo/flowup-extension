<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="com.spring.app.mail.model.MailDAO">
   
   	<select id="mailListAll" resultType="MailVO">
  		select mailNo, fk_employeeNo, subject, content
 		from tbl_mail
   	</select>
   
   	<!-- === 총 메일 개수 구하기 === --> 
   	<select id="getTotalCount"  resultType="int">
   		select count(*)
   		from tbl_mail
    	where deleteStatus = 0
   	</select>
   
   	<!-- === 받은 메일 목록 조회 === -->
   	<resultMap id="selectMailList_Map" type="MailVO">
	<!-- MailVO의 필드 매핑 -->
	    <result property="mailNo" 			column="mailNo"/>
	    <result property="fk_employeeNo" 	column="fk_employeeNo"/>
	    <result property="subject" 			column="subject"/>
	    <result property="content" 			column="content"/>
	    <result property="sendDate" 		column="sendDate"/>
	    <result property="readStatus" 		column="readStatus"/>
	    <result property="deleteStatus" 	column="deleteStatus"/>
	    <result property="saveStatus" 		column="saveStatus"/>
	    <result property="importantStatus" 	column="importantStatus"/>

 	<!-- EmployeeVO의 필드 매핑 -->
	    <association property="employeevo" javaType="EmployeeVO">
	        <result property="employeeNo" column="employeeNo"/>
	        <result property="name" column="name"/>
	    </association>
	    
	     <collection property="mailfilevo" ofType="MailFileVO">
	        <result property="fileSize" column="fileSize"/>
	    </collection>
	</resultMap>

	<!-- 받은 메일 조회 -->
	<select id="selectMailList" resultMap="selectMailList_Map" parameterType="HashMap">
	    SELECT M.mailNo, M.fk_employeeNo, M.subject, M.content, 
	           M.sendDate, M.readStatus, M.deleteStatus, M.saveStatus, M.importantStatus,
	           e.employeeNo, e.name,
	           MAX(f.fileSize) AS fileSize
	    FROM 
	        ( 
	            SELECT row_number() OVER (ORDER BY mailNo DESC) AS rno, 
	                   mailNo, fk_employeeNo, subject, content,
	                   to_char(sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
	                   readStatus, deleteStatus, saveStatus, importantStatus
	            FROM tbl_mail
	            WHERE 1 = 1
	            <if test="deleteStatus != null and deleteStatus != ''"> 
	                AND deleteStatus = #{deleteStatus} 
	            </if>
	            <if test="saveStatus != null and saveStatus != ''"> 
	                AND saveStatus = #{saveStatus} 
	            </if>
	            <if test="importantStatus != null and importantStatus != ''"> 
	                AND importantStatus = #{importantStatus} 
	            </if>
	        ) M
	    JOIN tbl_employee e ON M.fk_employeeNo = e.employeeNo
	    LEFT JOIN tbl_mailFile f ON M.mailNo = f.fk_mailNo
	    LEFT JOIN tbl_referenced r ON r.fk_mailNo = M.mailNo
	    
	    <!-- 로그인한 사용자가 수신자인 메일만 필터링 -->
	    <if test="loginUserId != null and loginUserId != ''">
	        AND r.refEmployeeNo  = #{loginUserId}  <!-- 로그인한 사용자의 employeeNo와 refMail이 일치 -->
	        AND r.refStatus = '0'  <!-- 수신자로 표시된 메일만 -->
	    </if>
	    
	    <!-- 페이징 처리 -->
    	WHERE rno BETWEEN #{startRno} AND #{endRno}
	    
	    GROUP BY M.mailNo, M.fk_employeeNo, M.subject, M.content, M.sendDate,
	    		 M.readStatus, M.deleteStatus, M.saveStatus, M.importantStatus,
	    		 e.employeeNo, e.name
	</select>

   
	<!-- 안 읽은 메일 개수(unread) 조회 -->
	<select id="getUnreadCount" resultType="int">
	  	SELECT COUNT(*)
	  	FROM tbl_mail
	  	WHERE readStatus = 0
	    AND deleteStatus = 0
	</select>
	
	
	<!-- 현재 메일의 importantStatus 조회 -->
	<select id="getImportantStatus" parameterType="int" resultType="int">
	    SELECT importantStatus 
	    FROM tbl_mail
	    WHERE mailNo = #{mailNo}
	</select>
	
	<!-- 별 클릭시 importantStatus 값을 업데이트 -->
	<update id="updateImportantStatus" parameterType="map">
	    UPDATE tbl_mail
	    SET importantStatus = #{importantStatus}
	    WHERE mailNo = #{mailNo}
	</update>
	
	<!-- 현재 메일의 ReadStatus 조회 -->
	<select id="getReadStatus" parameterType="int" resultType="int">
	    SELECT readStatus 
	    FROM tbl_mail
	    WHERE mailNo = #{mailNo}
	</select>
	
	<!-- 메일 아이콘 클릭시 ReadStatus 값을 업데이트 -->
	<update id="updateReadStatus" parameterType="map">
	    UPDATE tbl_mail
	    SET readStatus = #{readStatus}
	    WHERE mailNo = #{mailNo}
	</update>

	<!-- 중요 메일함 조회 -->
	<select id="selectImportantMail" parameterType="String" resultMap="selectMailList_Map">
	    SELECT M.mailNo, M.fk_employeeNo, M.subject, M.content
	          ,to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate
			  ,M.readStatus ,M.deleteStatus ,M.saveStatus ,M.importantStatus
	          ,E.employeeNo AS employeeNo
	          ,E.name AS name
	    FROM tbl_mail M
	    JOIN tbl_employee E
	      ON M.fk_employeeNo = E.employeeNo
	    WHERE M.importantStatus = 1
	      AND M.deleteStatus = 0
	      <!--
		      특정 유저 empNo를 발신자나 수신자 기준으로 필터할때 추가하기
		      발신자가 empNo 인 경우
		      AND (M.fk_employeeNo = #{empNo} OR M.receiverEmpNo = #{empNo})
	      -->
	      AND M.fk_employeeNo = #{empNo}
	    ORDER BY M.mailNo DESC
	</select>
	
	
	<!-- 메일 하나 조회하기 -->
	<resultMap id="viewMail" type="MailVO">
	    <!-- MailVO의 필드 매핑 -->
	    <result property="mailNo"        column="mailNo"/>
	    <result property="subject"       column="subject"/>
	    <result property="content"       column="content"/>
	    <result property="sendDate"      column="sendDate"/>
	    <result property="regDate"       column="regDate"/>
	    <result property="importantStatus" column="importantStatus"/>
	    <result property="readStatus"    column="readStatus"/>
	    
	    <!-- 참조 정보 관련 필드 매핑 -->
	    <association property="referencedVO" javaType="ReferencedVO">
	    <result property="refStatus"     column="refStatus"/>
	    <result property="refName"       column="refName"/>
	    <result property="refEmail"       column="refEmail"/>
		</association>
	    
	    <!-- EmployeeVO의 필드 매핑 -->
	    <association property="employeevo" javaType="EmployeeVO">
	        <result property="employeeNo" column="employeeNo"/>
	        <result property="name"       column="name"/>
	        <result property="email"      column="email"/>
	    </association>
	    
   	    <!-- 첨부파일 관련 필드 매핑 -->
   	    <collection property="mailfilevo" ofType="MailFileVO">
		    <result property="fileSize"      column="fileSize"/>
		    <result property="orgFileName"   column="orgFileName"/>
		    <result property="fileName"      column="fileName"/>
	    </collection>
	</resultMap>

	<select id="viewMail" resultMap="viewMail" parameterType="HashMap">
	    select M.mailNo, M.subject, M.content, M.sendDate, M.importantStatus, M.readStatus,
	           f.fileSize, f.orgFileName, f.fileName,
	           e.employeeNo, e.name, e.email,
	           r.refStatus, r.refName, r.refEmail
	    from tbl_mail M
	    left join tbl_mailFile f
	      on M.mailNo = f.fk_mailNo
	    left join tbl_referenced r
	      on M.mailNo = r.fk_mailNo
	    join tbl_employee e
	      on M.fk_employeeNo = e.employeeNo
	    where M.mailNo = #{mailNo}
	</select>

	
	<!-- 메일함 정렬 선택 시작 -->
	<select id="mailListSort" resultMap="selectMailList_Map" parameterType="HashMap">
	    SELECT 
	        M.mailNo, M.fk_employeeNo, M.subject, M.content,
	        to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
	        M.readStatus, M.deleteStatus, M.saveStatus, M.importantStatus,
	        e.employeeNo, e.name,
	        f.fileSize
	    FROM tbl_mail M
	    JOIN tbl_employee e ON M.fk_employeeNo = e.employeeNo
	    LEFT JOIN tbl_mailFile f ON M.mailNo = f.fk_mailNo
	    WHERE M.deleteStatus = 0
	
	    <!-- 동적 ORDER BY -->
	    <if test="sortKey != null and sortKey != ''">
	        ORDER BY
	        <!-- 안전하게 처리: sortKey가 subject, sendDate, fileSize 중 하나만 허용 -->
	        <choose>
	            <when test="sortKey == 'subject'">
	                M.subject ASC
	            </when>
	            <when test="sortKey == 'sendDate'">
	                M.sendDate DESC
	            </when>
				<when test="sortKey == 'fileSize'">
				    NVL(f.fileSize, 0) DESC
				</when>
	            <otherwise>
	                M.mailNo DESC
	            </otherwise>
	        </choose>
	    </if>
	</select>
	<!-- 메일함 정렬 선택 끝 -->
	
	<!-- 체크된 메일 deleteStatus=1 로 변경 -->
	<update id="updateCheckDeleteStatus">
	  UPDATE tbl_mail
	  SET deleteStatus = 1
	  WHERE mailNo IN
	  <foreach item="mailNo" collection="mailNoList" open="(" separator="," close=")">
	    #{mailNo}
	  </foreach>
	</update>

   	<!-- deleteStatus=1 인 메일 조회 -->
	<select id="selectDeletedMail" resultMap="selectMailList_Map">
	    SELECT 
	        M.mailNo,
	        M.fk_employeeNo,
	        M.subject,
	        M.content,
	        to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
	        M.readStatus,
	        M.deleteStatus,
	        M.saveStatus,
	        M.importantStatus,
	        E.employeeNo AS employeeNo,
	        E.name AS name,
	        F.fileSize
	    FROM tbl_mail M
	    JOIN tbl_employee E ON M.fk_employeeNo = E.employeeNo
	    LEFT JOIN tbl_mailFile F ON M.mailNo = F.fk_mailNo
	    WHERE M.deleteStatus = 1
	    ORDER BY M.mailNo DESC
	</select>
	
	
	<!-- 체크된 메일 readStatus=1 로 변경 -->
	<update id="updateCheckReadStatus" parameterType="list">
	    UPDATE tbl_mail
	    SET readStatus = 1
	    WHERE mailNo IN
	    <foreach collection="list" item="mailNo" open="(" separator="," close=")">
	        #{mailNo}
	    </foreach>
	</update>
	
	<!-- readStatus=1 로 변경된 체크된 메일 조회 -->
	<select id="getUpdatedMailStatus" resultType="MailVO">
	    SELECT mailNo, readStatus
	    FROM tbl_mail
	    WHERE mailNo IN
	    <foreach collection="list" item="mailNo" open="(" separator="," close=")">
	        #{mailNo}
	    </foreach>
	</select>
	
	
	<!-- 총 행수 구하기 (페이지바 계산) -->
	<select id="getMailCount" resultType="int" parameterType="HashMap">
	    SELECT COUNT(*)
	    FROM tbl_mail
	    WHERE 1=1
	    <if test="importantStatus != null">
	        AND importantStatus = #{importantStatus}
	    </if>
	    <if test="deleteStatus != null">
	        AND deleteStatus = #{deleteStatus}
	    </if>
	    <if test="saveStatus != null">
	        AND saveStatus = #{saveStatus}
	    </if>
	</select>
		
	<select id="getMailFile" resultType="MailFileVO">
	    SELECT fileNo, fileName, orgFileName, fileSize, fk_mailNo
	    FROM tbl_mailFile
	    WHERE fk_mailNo = #{mailNo}
	</select>
	
	
	<!-- 메일 작성 -->
	
	<!-- 메일 정보 저장 -->
	<insert id="insertMail" parameterType="com.spring.app.mail.domain.MailVO">
	    INSERT INTO tbl_mail (mailNo, subject, content, sendDate, fk_employeeNo)
	    VALUES (mailSeq.nextval, #{subject}, #{content}, SYSDATE, #{fk_employeeNo});
	
	    INSERT INTO tbl_receiver (receiverNo, fk_mailNo, fk_employeeNo, readSt, deleteSt, importantSt)
	    VALUES (receiverSeq.nextval, mailSeq.currval, #{receiverEmployeeNo}, 0, 0, 0);
	</insert>

	<!-- 참조자 정보 저장 -->
	<insert id="insertReferenced" parameterType="java.util.Map">
	  INSERT INTO tbl_referenced (
	    refMailNo, 
	    refStatus, 
	    refName, 
	    refEmail,
	    refEmployeeNo, 
	    fk_mailNo
	  )  
	  VALUES (
	    referencedSeq.nextval, 
	    #{refStatus, jdbcType=NUMERIC},
	    #{refName, jdbcType=VARCHAR},
	    #{refEmail, jdbcType=VARCHAR},  <!-- jdbcType=VARCHAR 명시 -->
	    #{refEmployeeNo, jdbcType=NUMERIC},  <!-- jdbcType=NUMERIC 명시 -->
	    #{fk_mailNo, jdbcType=NUMERIC}
	  )
	</insert>

	<!-- 첨부 파일 정보 저장 -->
	<insert id="insertMailFile" parameterType="MailFileVO">
	    INSERT INTO tbl_mailFile (fileNo, fileName, orgFileName, fileSize, fk_mailNo)
	    VALUES (mailFileSeq.nextval, #{fileName}, #{orgFileName}, #{fileSize, jdbcType=BIGINT}, #{fk_mailNo})
	</insert>

	<!-- 받는사람 이름으로 사원 번호 조회 -->
	<select id="findEmployeeNoByName" resultType="java.lang.Integer">
	    SELECT employeeNo 
	    FROM tbl_employee 
	    WHERE name = #{name}
	</select>


	<!-- 보낸메일함 조회 -->
	<select id="selectSentMail" parameterType="map" resultType="MailVO">
	    SELECT m.*
	    FROM tbl_mail m
	    JOIN tbl_referenced r ON m.mailNo = r.fk_mailNo
	    WHERE m.fk_employeeNo = #{senderNo}  <!-- 발신자 -->
	    AND r.refEmail != #{senderNo}  <!-- 수신자가 발신자와 같지 않음 -->
	    AND r.refStatus = '0'  <!-- 활성화된 메일만 -->
	    ORDER BY m.sendDate DESC
	    
	    <if test="currentShowPageNo != null and sizePerPage != null">
	        OFFSET ((#{currentShowPageNo} - 1) * #{sizePerPage}) ROWS
	        FETCH NEXT #{sizePerPage} ROWS ONLY
	    </if>
	</select>
	
	<!-- 보낸메일함 총 개수 조회 -->
	<select id="getSentMailCount" parameterType="String" resultType="int">
	    SELECT COUNT(*)
	    FROM tbl_mail m
	    JOIN tbl_referenced r ON m.mailNo = r.fk_mailNo
	    WHERE m.fk_employeeNo = #{senderNo}
	    AND r.refEmail != #{senderNo}
	    AND r.refStatus = '0'
	</select>

	<!-- 받은 메일 조회 -->
	<select id="selectReceivedMailList" resultType="com.spring.app.mail.domain.MailVO">
	    SELECT M.mailNo, M.subject, M.content, M.sendDate, 
	           R.readSt AS readStatus, R.deleteSt AS deleteStatus, R.importantSt AS importantStatus,
	           E.employeeNo AS senderEmployeeNo, E.name AS senderName,
	           COALESCE(SUM(F.fileSize), 0) AS totalFileSize
	    FROM tbl_receiver R
	    JOIN tbl_mail M ON R.fk_mailNo = M.mailNo
	    JOIN tbl_employee E ON M.fk_employeeNo = E.employeeNo  -- 발신자 정보
	    LEFT JOIN tbl_mailFile F ON M.mailNo = F.fk_mailNo
	    WHERE R.fk_employeeNo = #{loginEmployeeNo} -- 로그인한 사용자가 수신자인 경우
	      AND R.deleteSt = 0  -- 삭제되지 않은 메일만 조회
	    GROUP BY M.mailNo, M.subject, M.content, M.sendDate, 
	             R.readSt, R.deleteSt, R.importantSt, 
	             E.employeeNo, E.name;
	</select>





	<!-- ================= yh ================= -->
	<resultMap type="HashMap" id="yh_map">
		<result property="readStatusPercentage" column="readStatusPercentage" javaType="String"/>
		<result property="importantStatusPercentage" column="importantStatusPercentage" javaType="String"/>
		<result property="saveStatusPercentage" column="saveStatusPercentage" javaType="String"/>
	</resultMap>
	<select id="selectMail" resultMap="yh_map" parameterType="String">
		SELECT 
		    ROUND(
		        CASE 
		            WHEN COUNT(DISTINCT M.mailNo) = 0 THEN 0 
		            ELSE (COUNT(DISTINCT CASE WHEN READSTATUS = 1 THEN M.mailNo END) / COUNT(DISTINCT M.mailNo)) * 100 
		        END, 2
		    ) AS readStatusPercentage,
		    
		    ROUND(
		        CASE 
		            WHEN COUNT(DISTINCT M.mailNo) = 0 THEN 0 
		            ELSE (COUNT(DISTINCT CASE WHEN IMPORTANTSTATUS = 1 THEN M.mailNo END) / COUNT(DISTINCT M.mailNo)) * 100 
		        END, 2
		    ) AS importantStatusPercentage,
		    
		    ROUND(
		        CASE 
		            WHEN COUNT(DISTINCT M.mailNo) = 0 THEN 0 
		            ELSE (COUNT(DISTINCT CASE WHEN SAVESTATUS = 1 THEN M.mailNo END) / COUNT(DISTINCT M.mailNo)) * 100 
		        END, 2
		    ) AS saveStatusPercentage
		FROM tbl_receiver R
		JOIN tbl_mail M ON R.fk_mailNo = M.mailNo
		WHERE R.fk_employeeNo = #{fk_employeeNo}
		  AND R.deleteSt = 0
	</select>
	
	
	
	<resultMap type="HashMap" id="yh_cnt_map">
		<result property="MAILECNT" column="MAILECNT" javaType="String"/>
	</resultMap>
	<select id="getMailCnt" parameterType="String" resultMap="yh_cnt_map">
		SELECT count(*) as MAILECNT
		FROM tbl_receiver R
		JOIN tbl_mail M ON R.fk_mailNo = M.mailNo
		WHERE R.fk_employeeNo = #{employeeno} AND R.deleteSt = 0 AND M.IMPORTANTSTATUS = 1
		
		union all
		
		SELECT count(*) as MAILECNT
		FROM tbl_receiver R
		JOIN tbl_mail M ON R.fk_mailNo = M.mailNo
		WHERE R.fk_employeeNo = #{employeeno} AND R.deleteSt = 0 AND M.SAVESTATUS = 1
		
		union all
		
		SELECT count(*) as MAILECNT
		FROM tbl_receiver R
		JOIN tbl_mail M ON R.fk_mailNo = M.mailNo
		WHERE R.fk_employeeNo = #{employeeno} AND R.deleteSt = 0 AND M.READSTATUS = 1
	</select>
	
	
	<select id="searchMail" parameterType="String" resultMap="selectMailList_Map">
		SELECT 
	        M.mailNo,
	        M.fk_employeeNo,
	        M.subject,
	        M.content,
	        to_char(M.sendDate, 'yyyy-mm-dd hh24:mi') AS sendDate,
	        M.readStatus,
	        M.deleteStatus,
	        M.saveStatus,
	        M.importantStatus,
	        E.employeeNo AS employeeNo,
	        E.name AS name,
	        F.fileSize 
	    FROM tbl_mail M
	    JOIN tbl_employee E ON M.fk_employeeNo = E.employeeNo
	    LEFT JOIN tbl_mailFile F ON M.mailNo = F.fk_mailNo
	    WHERE M.deleteStatus = 0 and lower(subject) like '%'||lower(#{searchWord})||'%' 
	    ORDER BY M.mailNo DESC
	</select>
	<!-- ================= yh ================= -->






</mapper>